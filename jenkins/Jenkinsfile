pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins/builder.yaml'
    }
  }
  
  triggers {
    pollSCM('H/5 * * * *')
  }

  stages {
    stage('Prepare Workspace') {
      steps {
        sh 'cp -r ${WORKSPACE}/* /workspace/'
        sh 'find /workspace'
      }
    }

    stage('Tests') {
      steps {
        container('python') {
          sh '''
            pip install flake8
            flake8 /workspace/deploy/app/main.py
          '''
        }
      }
    }

    stage('SonarQube Analysis') {
      steps {
        container('sonar-scanner') {
          withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
            sh "echo $SONAR_TOKEN"
            sh """
              sonar-scanner \\
                -Dsonar.projectKey=stringersix_rsschool-devops-course-tasks \\
                -Dsonar.organization=stringersix \\
                -Dsonar.host.url=https://sonarcloud.io \\
                -Dsonar.token=\$SONAR_TOKEN \\
                -Dsonar.sources=/workspace/deploy/app
            """
          }
        }
      }
    }

    stage('Build and Push Image') {
      steps {
        container('kaniko') {
          sh '''
            /kaniko/executor --dockerfile=/workspace/deploy/app/Dockerfile \
                             --context=/workspace/deploy/app \
                             --destination=daniluk666/flask:latest \
                             --cleanup
          '''
        }
      }
    }

    stage('Deploy with Helm') {
      steps {
        container('helm') {
          sh '''
            helm upgrade --install flask-app /workspace/deploy/helm \
              --set image.repository=daniluk666/flask \
              --set image.tag=latest \
              --wait
          '''
        }
      }
    }
  }
}