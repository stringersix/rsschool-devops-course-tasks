controller:
  admin:
    username: admin
    password: admin
  serviceType: NodePort
  installPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - configuration-as-code
    - matrix-auth
    - job-dsl
    - docker-workflow
    - kubernetes-cli
    - prometheus
    - blueocean
  persistence:
    enabled: true
    size: 4Gi
    storageClass: standard

  # JCasC:
  #   defaultConfig: false
  #   configScripts:
  #     kubernetes-cloud: |
  #       jenkins:
  #         clouds:
  #           - kubernetes:
  #               name: "kubernetes"
  #               serverUrl: "https://kubernetes.default.svc.cluster.local"
  #               skipTlsVerify: true
  #               namespace: "jenkins"
  #               jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
  #               jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
  #               containerCapStr: "10"
  #               retentionTimeout: 5
  #               templates:
  #                 - name: "default"
  #                   label: "jenkins-agent"
  #                   containers:
  #                     - name: "jnlp"
  #                       image: "jenkins/inbound-agent:latest"
  #                       alwaysPullImage: true
  #                       args: "${computer.jnlpmac} ${computer.name}"
  #                       ttyEnabled: true
  #                       resourceRequestCpu: "100m"
  #                       resourceRequestMemory: "256Mi"
  #                       resourceLimitCpu: "500m"
  #                       resourceLimitMemory: "512Mi"
  #     credentials: |
  #       credentials:
  #         system:
  #           domainCredentials:
  #             - credentials:
  #                 - string:
  #                     scope: GLOBAL
  #                     id: "SMTP_EMAIL"
  #                     description: "SMTP email"
  #                     secret: {{ .Values.mySecrets.smtpEmail | quote }}
  #                 - string:
  #                     scope: GLOBAL
  #                     id: "SMTP_PASS"
  #                     description: "SMTP password"
  #                     secret: {{ .Values.mySecrets.smtpPass | quote }}
  #                 - string:
  #                     scope: GLOBAL
  #                     id: "GRAFANA_ADMIN_PASS"
  #                     description: "Grafana admin password"
  #                     secret: {{ .Values.mySecrets.grafanaAdminPass | quote }}
  #     my-config: |-
  #       jobs:
  #         - script: >
  #             pipelineJob('deploy-monitoring') {
  #               definition {
  #                 cpsScm {
  #                   scm {
  #                     git {
  #                       remote {
  #                         url('https://github.com/stringersix/rsschool-devops-course-tasks')
  #                       }
  #                       branches('task_7')
  #                     }
  #                   }
  #                   scriptPath('jenkins/Jenkinsfile')
  #                 }
  #               }
  #             }